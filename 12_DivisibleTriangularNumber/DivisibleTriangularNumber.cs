using System;

class DivisibleTriangularNumber
{
    public static bool fiveHundredDivisors(long number)
    {
        int count = 1;
        for (int i = 2; i <= number; i++)
        {
            if (number % i == 0)
            {
                count++;
            }
        }
        if (count > 500)
        {
            return true;
        }
        return false;
    }
    static void Main()
    {
        //The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 
        //1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
        //What is the value of the first triangle number to have over five hundred divisors?

        int i = 2;
        long result = 1;
        while(!fiveHundredDivisors(result))
        {
            result += i;
            i++;
        }
        Console.WriteLine(result);
    }
}
